{"version":3,"file":"block.min.js","sources":["../../src/local/block.js"],"sourcesContent":["import {BaseComponent} from 'core/reactive';\nimport {get_string as getString} from 'core/str';\nimport {getCurrentCourseEditor} from \"core_courseformat/courseeditor\";\nimport BaseFactory from \"../app/factory\";\n\nexport default class Block extends BaseComponent {\n    /**\n     * @type {CourseElement}\n     */\n    course;\n\n    /**\n     * @type {BlockElement}\n     */\n    block;\n\n    /**\n     * @type {QueueElement}\n     */\n    queue;\n\n    /**\n     * Constructor hook.\n     * @param {Object} descriptor\n     */\n    create(descriptor) {\n        // Optional component name for debugging.\n        this.name = 'sharing_cart_block';\n        // Default query selectors.\n        this.selectors = {};\n\n        this.canBackupUserdata = descriptor.canBackupUserdata ?? false;\n        this.canAnonymizeUserdata = descriptor.canAnonymizeUserdata ?? false;\n        this.showSharingCartBasket = descriptor.showSharingCartBasket ?? false;\n    }\n\n    /**\n     * Static method to create a component instance form the mustache template.\n     *\n     * @param {String} target\n     * @param {Boolean} canBackupUserdata\n     * @param {Boolean} canAnonymizeUserdata\n     * @param {Boolean} showSharingCartBasket\n     */\n    static init(target, canBackupUserdata, canAnonymizeUserdata, showSharingCartBasket) {\n        return new this({\n            element: document.getElementById(target),\n            reactive: getCurrentCourseEditor(),\n            canBackupUserdata,\n            canAnonymizeUserdata,\n            showSharingCartBasket\n        });\n    }\n\n    /**\n     * Initial state ready method.\n     */\n    stateReady() {\n        this.baseFactory = BaseFactory.make();\n        const {course, block, queue} = this.baseFactory.block().eventHandler().onLoad(\n            this.canBackupUserdata,\n            this.canAnonymizeUserdata,\n            this.showSharingCartBasket\n        );\n\n        this.course = course;\n        this.block = block;\n        this.queue = queue;\n\n        const courseContent = document.querySelector('.course-content');\n        if (courseContent) {\n            const sectionElements = courseContent.querySelectorAll('[data-for=\"section\"]');\n            sectionElements.forEach(sectionElement => {\n                const section = this.reactive.state.section.get(sectionElement.dataset.id);\n                this._refreshSection({element: section});\n            });\n\n            const courseModuleElements = courseContent.querySelectorAll('[data-for=\"cmitem\"]');\n            courseModuleElements.forEach(courseModuleElement => {\n                const courseModule = this.reactive.state.cm.get(courseModuleElement.dataset.id);\n                this._refreshCourseModule({element: courseModule});\n            });\n        }\n    }\n\n    /**\n     * Component watchers.\n     *\n     * @returns {Array} of watchers\n     */\n    getWatchers() {\n        return [\n            {watch: `section:created`, handler: this._refreshSection},\n            {watch: `section:updated`, handler: this._refreshSection},\n            {watch: `cm:created`, handler: this._refreshCourseModule},\n            {watch: `cm:updated`, handler: this._refreshCourseModule},\n        ];\n    }\n\n    async getBackupToSharingCartButton() {\n        if (!this._sharingCartButton) {\n            this._sharingCartButton = await this.baseFactory.moodle().template().createElementFromTemplate(\n                'block_sharing_cart/block/course/add_to_sharing_cart_button',\n                {}\n            );\n        }\n\n        return this._sharingCartButton.cloneNode(true);\n    }\n\n    /**\n     * Refresh the section.\n     * @param {Object} param\n     * @param {Object} param.element\n     */\n    async _refreshSection({element}) {\n        if (this.showSharingCartBasket) {\n            let backupButton = await this.getBackupToSharingCartButton();\n\n            const sectionTitle = document.querySelector(\n                '.course-content .course-section-header .inplaceeditable[data-itemid=\"' + element.id + '\"]'\n            );\n            if (sectionTitle) {\n                const hasBackupButton = sectionTitle.parentElement.querySelector('.add_to_sharing_cart');\n                if (!hasBackupButton) {\n                    sectionTitle.after(backupButton);\n\n                    backupButton.addEventListener(\n                        'click',\n                        (e) => {\n                            if (e.currentTarget.classList.contains('disabled')) {\n                                return;\n                            }\n\n                            this.block.addSectionBackupToSharingCart(element.id);\n                        }\n                    );\n                }\n\n                backupButton = sectionTitle.parentElement.querySelector('.add_to_sharing_cart');\n\n                const disabled = element.cmlist.length === 0;\n                backupButton.classList.toggle('disabled', disabled);\n                backupButton.title = disabled ?\n                    await getString('no_course_modules_in_section_description', 'block_sharing_cart') :\n                    '';\n            }\n        }\n    }\n\n    /**\n     * Refresh the course module.\n     * @param {Object} param\n     * @param {Object} param.element\n     */\n    async _refreshCourseModule({element}) {\n        if (this.showSharingCartBasket) {\n            const backupButton = await this.getBackupToSharingCartButton();\n\n            const courseModuleActionMenu = document.querySelector(\n                '.course-content .cm_action_menu[data-cmid=\"' + element.id + '\"]'\n            );\n            if (!courseModuleActionMenu) {\n                setTimeout(() => this._refreshCourseModule({element}), 100);\n                return;\n            }\n\n            const hasBackupButton = courseModuleActionMenu.querySelector('.add_to_sharing_cart');\n            if (!hasBackupButton) {\n                courseModuleActionMenu.append(backupButton);\n\n                backupButton.addEventListener(\n                    'click',\n                    this.block.addCourseModuleBackupToSharingCart.bind(this.block, element.id)\n                );\n            }\n        }\n    }\n}"],"names":["Block","BaseComponent","create","descriptor","name","selectors","canBackupUserdata","canAnonymizeUserdata","showSharingCartBasket","target","this","element","document","getElementById","reactive","stateReady","baseFactory","BaseFactory","make","course","block","queue","eventHandler","onLoad","courseContent","querySelector","querySelectorAll","forEach","sectionElement","section","state","get","dataset","id","_refreshSection","courseModuleElement","courseModule","cm","_refreshCourseModule","getWatchers","watch","handler","_sharingCartButton","moodle","template","createElementFromTemplate","cloneNode","backupButton","getBackupToSharingCartButton","sectionTitle","parentElement","after","addEventListener","e","currentTarget","classList","contains","addSectionBackupToSharingCart","disabled","cmlist","length","toggle","title","courseModuleActionMenu","setTimeout","append","addCourseModuleBackupToSharingCart","bind"],"mappings":"ufAKqBA,cAAcC,0KAoB/BC,OAAOC,iBAEEC,KAAO,0BAEPC,UAAY,QAEZC,kBAAoBH,WAAWG,oBAAqB,OACpDC,qBAAuBJ,WAAWI,uBAAwB,OAC1DC,sBAAwBL,WAAWK,wBAAyB,cAWzDC,OAAQH,kBAAmBC,qBAAsBC,8BAClD,IAAIE,KAAK,CACZC,QAASC,SAASC,eAAeJ,QACjCK,UAAU,0CACVR,kBAAAA,kBACAC,qBAAAA,qBACAC,sBAAAA,wBAORO,kBACSC,YAAcC,iBAAYC,aACzBC,OAACA,OAADC,MAASA,MAATC,MAAgBA,OAASX,KAAKM,YAAYI,QAAQE,eAAeC,OACnEb,KAAKJ,kBACLI,KAAKH,qBACLG,KAAKF,4BAGJW,OAASA,YACTC,MAAQA,WACRC,MAAQA,YAEPG,cAAgBZ,SAASa,cAAc,sBACzCD,cAAe,CACSA,cAAcE,iBAAiB,wBACvCC,SAAQC,uBACdC,QAAUnB,KAAKI,SAASgB,MAAMD,QAAQE,IAAIH,eAAeI,QAAQC,SAClEC,gBAAgB,CAACvB,QAASkB,aAGNL,cAAcE,iBAAiB,uBACvCC,SAAQQ,4BACnBC,aAAe1B,KAAKI,SAASgB,MAAMO,GAAGN,IAAII,oBAAoBH,QAAQC,SACvEK,qBAAqB,CAAC3B,QAASyB,mBAUhDG,oBACW,CACH,CAACC,MAAQ,kBAAkBC,QAAS/B,KAAKwB,iBACzC,CAACM,MAAQ,kBAAkBC,QAAS/B,KAAKwB,iBACzC,CAACM,MAAQ,aAAaC,QAAS/B,KAAK4B,sBACpC,CAACE,MAAQ,aAAaC,QAAS/B,KAAK4B,mEAKnC5B,KAAKgC,0BACDA,yBAA2BhC,KAAKM,YAAY2B,SAASC,WAAWC,0BACjE,6DACA,KAIDnC,KAAKgC,mBAAmBI,WAAU,mCAQvBnC,QAACA,iBACfD,KAAKF,sBAAuB,KACxBuC,mBAAqBrC,KAAKsC,qCAExBC,aAAerC,SAASa,cAC1B,wEAA0Ed,QAAQsB,GAAK,SAEvFgB,aAAc,CACUA,aAAaC,cAAczB,cAAc,0BAE7DwB,aAAaE,MAAMJ,cAEnBA,aAAaK,iBACT,SACCC,IACOA,EAAEC,cAAcC,UAAUC,SAAS,kBAIlCpC,MAAMqC,8BAA8B9C,QAAQsB,QAK7Dc,aAAeE,aAAaC,cAAczB,cAAc,8BAElDiC,SAAqC,IAA1B/C,QAAQgD,OAAOC,OAChCb,aAAaQ,UAAUM,OAAO,WAAYH,UAC1CX,aAAae,MAAQJ,eACX,mBAAU,2CAA4C,sBAC5D,2CAUW/C,QAACA,kBACpBD,KAAKF,sBAAuB,OACtBuC,mBAAqBrC,KAAKsC,+BAE1Be,uBAAyBnD,SAASa,cACpC,8CAAgDd,QAAQsB,GAAK,UAE5D8B,mCACDC,YAAW,IAAMtD,KAAK4B,qBAAqB,CAAC3B,QAAAA,WAAW,KAInCoD,uBAAuBtC,cAAc,0BAEzDsC,uBAAuBE,OAAOlB,cAE9BA,aAAaK,iBACT,QACA1C,KAAKU,MAAM8C,mCAAmCC,KAAKzD,KAAKU,MAAOT,QAAQsB"}