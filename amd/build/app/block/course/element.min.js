define("block_sharing_cart/app/block/course/element",["exports"],(function(_exports){function _classPrivateFieldInitSpec(obj,privateMap,value){!function(obj,privateCollection){if(privateCollection.has(obj))throw new TypeError("Cannot initialize the same private elements twice on an object")}(obj,privateMap),privateMap.set(obj,value)}function _classPrivateFieldGet(receiver,privateMap){return function(receiver,descriptor){if(descriptor.get)return descriptor.get.call(receiver);return descriptor.value}(receiver,_classExtractFieldDescriptor(receiver,privateMap,"get"))}function _classPrivateFieldSet(receiver,privateMap,value){return function(receiver,descriptor,value){if(descriptor.set)descriptor.set.call(receiver,value);else{if(!descriptor.writable)throw new TypeError("attempted to set read only private field");descriptor.value=value}}(receiver,_classExtractFieldDescriptor(receiver,privateMap,"set"),value),value}function _classExtractFieldDescriptor(receiver,privateMap,action){if(!privateMap.has(receiver))throw new TypeError("attempted to "+action+" private field on non-instance");return privateMap.get(receiver)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0;var _baseFactory=new WeakMap,_blockElement=new WeakMap,_element=new WeakMap,_clipboard=new WeakMap,_clipboardTargetListenerAbortController=new WeakMap;return _exports.default=class{constructor(baseFactory,blockElement,element){_classPrivateFieldInitSpec(this,_baseFactory,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(this,_blockElement,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(this,_element,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(this,_clipboard,{writable:!0,value:null}),_classPrivateFieldInitSpec(this,_clipboardTargetListenerAbortController,{writable:!0,value:new AbortController}),_classPrivateFieldSet(this,_baseFactory,baseFactory),_classPrivateFieldSet(this,_blockElement,blockElement),_classPrivateFieldSet(this,_element,element)}async addBackupToSharingCartButtons(){const element=await _classPrivateFieldGet(this,_baseFactory).moodle().template().createElementFromTemplate("block_sharing_cart/block/course/add_to_sharing_cart_button",{});_classPrivateFieldGet(this,_element).querySelectorAll(".course-section-header .inplaceeditable").forEach((sectionTitle=>{const button=element.cloneNode(!0);sectionTitle.after(button);const sectionId=sectionTitle.dataset.itemid;button.addEventListener("click",_classPrivateFieldGet(this,_blockElement).addSectionBackupToSharingCart.bind(_classPrivateFieldGet(this,_blockElement),sectionId))}));_classPrivateFieldGet(this,_element).querySelectorAll(".cm_action_menu").forEach((courseModuleActionMenu=>{const button=element.cloneNode(!0);courseModuleActionMenu.append(button);const courseModuleId=courseModuleActionMenu.dataset.cmid;button.addEventListener("click",_classPrivateFieldGet(this,_blockElement).addCourseModuleBackupToSharingCart.bind(_classPrivateFieldGet(this,_blockElement),courseModuleId))}))}async renderClipboard(){_classPrivateFieldSet(this,_clipboard,await _classPrivateFieldGet(this,_baseFactory).moodle().template().createElementFromTemplate("block_sharing_cart/block/course/clipboard",{})),_classPrivateFieldGet(this,_element).prepend(_classPrivateFieldGet(this,_clipboard));_classPrivateFieldGet(this,_clipboard).querySelector('[data-action="clear-clipboard"]').addEventListener("click",this.onClearClipboard.bind(this))}onClearClipboard(e){e.preventDefault(),e.stopPropagation(),this.clearClipboard()}clearClipboard(){_classPrivateFieldGet(this,_clipboard).classList.add("d-none"),this.clearClipboardTargets(),_classPrivateFieldGet(this,_blockElement).clearClipboard()}updateClipboard(item){_classPrivateFieldGet(this,_clipboard).classList.add("d-none");_classPrivateFieldGet(this,_clipboard).querySelector(".info").innerHTML=item.getItemInfo().innerHTML,_classPrivateFieldGet(this,_clipboard).classList.remove("d-none")}async updateClipboardTargets(item){const element=await _classPrivateFieldGet(this,_baseFactory).moodle().template().createElementFromTemplate("block_sharing_cart/block/course/clipboard_target",{});_classPrivateFieldGet(this,_clipboardTargetListenerAbortController).abort(),_classPrivateFieldSet(this,_clipboardTargetListenerAbortController,new AbortController),_classPrivateFieldGet(this,_element).querySelectorAll('[data-for="cmlist"]').forEach((section=>{const clipboardTarget=section.querySelector(".clipboard_target")??element.cloneNode(!0);section.prepend(clipboardTarget);const sectionId=section.closest('[data-for="section"]').dataset.id;clipboardTarget.classList.remove("hidden"),clipboardTarget.parentElement.classList.remove("hidden"),clipboardTarget.addEventListener("click",_classPrivateFieldGet(this,_blockElement).confirmImportBackupFromSharingCart.bind(_classPrivateFieldGet(this,_blockElement),item,sectionId),{signal:_classPrivateFieldGet(this,_clipboardTargetListenerAbortController).signal})}))}getSectionName(sectionId){const sectionNameElement=_classPrivateFieldGet(this,_element).querySelector(`[data-for="section"][data-id="${sectionId}"] .sectionname`);return(null==sectionNameElement?void 0:sectionNameElement.innerText.trim())??"Unknown"}getSectionCourseModules(sectionId){return _classPrivateFieldGet(this,_element).querySelectorAll(`[data-for="section"][data-id="${sectionId}"] [data-for="cmlist"] [data-for="cmitem"]`)}getCourseModuleName(courseModuleId){var _courseModule$querySe;return(null===(_courseModule$querySe=_classPrivateFieldGet(this,_element).querySelector(`[data-for="cmitem"][data-id="${courseModuleId}"]`).querySelector(".instancename"))||void 0===_courseModule$querySe?void 0:_courseModule$querySe.innerText.trim())??"Unknown"}getClipboardTargets(){return _classPrivateFieldGet(this,_element).querySelectorAll(".clipboard_target")}clearClipboardTargets(){this.getClipboardTargets().forEach((target=>{target.remove()}))}async setClipboard(item){_classPrivateFieldGet(this,_clipboard)||await this.renderClipboard(),this.updateClipboard(item),await this.updateClipboardTargets(item)}},_exports.default}));

//# sourceMappingURL=element.min.js.map