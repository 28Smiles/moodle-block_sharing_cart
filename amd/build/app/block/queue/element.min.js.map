{"version":3,"file":"element.min.js","sources":["../../../../src/app/block/queue/element.js"],"sourcesContent":["import {getCurrentCourseEditor} from \"core_courseformat/courseeditor\";\nimport Ajax from \"core/ajax\";\nimport * as Toast from 'core/toast';\nimport {get_string as getString} from \"core/str\";\n\nexport default class QueueElement {\n    /**\n     * @type {BaseFactory}\n     */\n    #baseFactory;\n\n    /**\n     * @type {BlockElement}\n     */\n    #blockElement;\n\n    /**\n     * @type {HTMLElement}\n     */\n    #element;\n\n    /**\n     * @type {CourseEditor}\n     */\n    #reactive;\n\n    /**\n     * @type {Promise<void>|null}\n     */\n    #loadQueuePromise = null;\n\n    /**\n     * @type {boolean}\n     */\n    #preventReload = false;\n\n    /**\n     *\n     * @param {BaseFactory} baseFactory\n     * @param {BlockElement} blockElement\n     * @param {HTMLElement} element\n     */\n    constructor(baseFactory, blockElement, element) {\n        this.#baseFactory = baseFactory;\n        this.#blockElement = blockElement;\n        this.#element = element;\n        this.#reactive = getCurrentCourseEditor();\n\n        this.tryReloadQueue(true);\n\n        setInterval(() => {\n            this.tryReloadQueue();\n        }, 4000);\n    }\n\n    /**\n     * @return {NodeListOf<Element>}\n     */\n    getQueueItems() {\n        return this.#element.querySelectorAll('.queue-item');\n    }\n\n    /**\n     * @param {boolean} ignoreQueueItemsCount\n     */\n    tryReloadQueue(ignoreQueueItemsCount = false) {\n        if (ignoreQueueItemsCount === false && this.getQueueItems().length === 0) {\n            return;\n        }\n\n        if (this.#loadQueuePromise !== null) {\n            this.#loadQueuePromise.then(() => {\n                this.tryReloadQueue();\n            });\n            return;\n        }\n\n        this.#loadQueuePromise = this.loadQueue();\n        this.#loadQueuePromise.then(() => {\n            this.#loadQueuePromise = null;\n        }).catch(() => {\n            this.#loadQueuePromise = null;\n        });\n    }\n\n    /**\n     * @param {Boolean} showSpinner\n     * @return {Promise<void>}\n     */\n    async loadQueue(showSpinner = false) {\n        const oldChildren = this.#element.children;\n        const oldQueueItemsCount = this.getQueueItems().length;\n\n        if (showSpinner) {\n            this.#element.innerHTML = '<i class=\"fa fa-spinner\"></i>';\n        }\n\n        const elements = await this.#baseFactory.moodle().template().createElementsFromFragment(\n            'block_sharing_cart',\n            'item_queue',\n            M.cfg.contextid,\n            {}\n        );\n\n        const queueItems = elements.filter((element) => {\n            if (!(element instanceof Element)) {\n                return false;\n            }\n\n            return element.classList.contains('queue-item');\n        });\n\n        if (oldQueueItemsCount > queueItems.length) {\n            const removedElements = Array.from(oldChildren).filter((element) => {\n                const correspondingElement = queueItems.find((el) => el.dataset.id === element.dataset.id);\n\n                return correspondingElement === undefined;\n            });\n\n            const sectionIds = [];\n            removedElements.forEach((element) => {\n                const sectionId = element.dataset.toSectionId;\n\n                if (!sectionId) {\n                    return;\n                }\n\n                if (sectionIds.indexOf(sectionId) !== -1) {\n                    return;\n                }\n\n                sectionIds.push(sectionId);\n            });\n\n            if (sectionIds.length > 0) {\n                this.#reactive.dispatch('sectionState', sectionIds).then(() => {\n                    Toast.add(getString('you_may_need_to_reload_the_course_warning', 'block_sharing_cart'), {\n                        closeButton: true,\n                        autohide: false,\n                        type: 'warning'\n                    });\n                });\n            }\n        }\n\n        this.#element.innerHTML = '';\n\n        queueItems.forEach((element) => {\n            const runNowButton = element.querySelector('button.btn');\n\n            if (!runNowButton) {\n                return;\n            }\n\n            runNowButton.addEventListener('click', () => {\n                const taskId = element.dataset.id;\n\n                runNowButton.disabled = true;\n\n                this.#preventReload = true;\n                if (this.#loadQueuePromise !== null) {\n                    this.#loadQueuePromise.abort();\n                }\n\n                Ajax.call([{\n                    methodname: 'block_sharing_cart_run_task_now',\n                    args: {\n                        task_id: taskId\n                    }\n                }]);\n\n                setTimeout(() => {\n                    this.#preventReload = false;\n                    this.tryReloadQueue(true);\n                }, 2000);\n            }, {once: true});\n        });\n\n        elements.forEach((element) => {\n            this.#element.appendChild(element);\n        });\n    }\n}\n"],"names":["constructor","baseFactory","blockElement","element","tryReloadQueue","setInterval","getQueueItems","_classPrivateFieldGet","querySelectorAll","this","length","loadQueue","then","catch","showSpinner","oldChildren","children","oldQueueItemsCount","innerHTML","elements","moodle","template","createElementsFromFragment","M","cfg","contextid","queueItems","filter","Element","classList","contains","removedElements","Array","from","undefined","find","el","dataset","id","sectionIds","forEach","sectionId","toSectionId","indexOf","push","dispatch","Toast","add","closeButton","autohide","type","runNowButton","querySelector","addEventListener","taskId","disabled","abort","call","methodname","args","task_id","setTimeout","once","appendChild"],"mappings":"07EA0CIA,YAAYC,YAAaC,aAAcC,4WAbnB,0EAKH,4CASOF,sDACCC,kDACLC,+CACC,gDAEZC,gBAAe,GAEpBC,aAAY,UACHD,mBACN,KAMPE,uBACWC,qCAAcC,iBAAiB,eAM1CJ,kBACkC,+DAAyC,IAAhCK,KAAKH,gBAAgBI,SAI7B,OAA3BH,4FAOqBE,KAAKE,2DACPC,MAAK,kDACC,SAC1BC,OAAM,kDACoB,wDAVFD,MAAK,UACnBR,2CAiBDU,0EACNC,YAAcR,qCAAcS,SAC5BC,mBAAqBR,KAAKH,gBAAgBI,OAE5CI,mDACcI,UAAY,uCAGxBC,eAAiBZ,yCAAkBa,SAASC,WAAWC,2BACzD,qBACA,aACAC,EAAEC,IAAIC,UACN,IAGEC,WAAaP,SAASQ,QAAQxB,SAC1BA,mBAAmByB,SAIlBzB,QAAQ0B,UAAUC,SAAS,mBAGlCb,mBAAqBS,WAAWhB,OAAQ,OAClCqB,gBAAkBC,MAAMC,KAAKlB,aAAaY,QAAQxB,cAGpB+B,IAFHR,WAAWS,MAAMC,IAAOA,GAAGC,QAAQC,KAAOnC,QAAQkC,QAAQC,OAKrFC,WAAa,GACnBR,gBAAgBS,SAASrC,gBACfsC,UAAYtC,QAAQkC,QAAQK,YAE7BD,YAIkC,IAAnCF,WAAWI,QAAQF,YAIvBF,WAAWK,KAAKH,cAGhBF,WAAW7B,OAAS,yCACLmC,SAAS,eAAgBN,YAAY3B,MAAK,KACrDkC,MAAMC,KAAI,mBAAU,4CAA6C,sBAAuB,CACpFC,aAAa,EACbC,UAAU,EACVC,KAAM,oDAMRhC,UAAY,GAE1BQ,WAAWc,SAASrC,gBACVgD,aAAehD,QAAQiD,cAAc,cAEtCD,cAILA,aAAaE,iBAAiB,SAAS,WAC7BC,OAASnD,QAAQkC,QAAQC,GAE/Ba,aAAaI,UAAW,6CAEF,GACS,OAA3BhD,6FACuBiD,sBAGtBC,KAAK,CAAC,CACPC,WAAY,kCACZC,KAAM,CACFC,QAASN,WAIjBO,YAAW,gDACe,QACjBzD,gBAAe,KACrB,OACJ,CAAC0D,MAAM,OAGd3C,SAASqB,SAASrC,+CACA4D,YAAY5D"}