define("block_sharing_cart/app/block/element",["exports","../factory","core/modal_factory","core/modal_events","core/str","core/ajax"],(function(_exports,_factory,_modal_factory,_modal_events,_str,_ajax){function _interopRequireDefault(obj){return obj&&obj.__esModule?obj:{default:obj}}function _classPrivateFieldInitSpec(obj,privateMap,value){!function(obj,privateCollection){if(privateCollection.has(obj))throw new TypeError("Cannot initialize the same private elements twice on an object")}(obj,privateMap),privateMap.set(obj,value)}function _classPrivateFieldGet(receiver,privateMap){return function(receiver,descriptor){if(descriptor.get)return descriptor.get.call(receiver);return descriptor.value}(receiver,_classExtractFieldDescriptor(receiver,privateMap,"get"))}function _classPrivateFieldSet(receiver,privateMap,value){return function(receiver,descriptor,value){if(descriptor.set)descriptor.set.call(receiver,value);else{if(!descriptor.writable)throw new TypeError("attempted to set read only private field");descriptor.value=value}}(receiver,_classExtractFieldDescriptor(receiver,privateMap,"set"),value),value}function _classExtractFieldDescriptor(receiver,privateMap,action){if(!privateMap.has(receiver))throw new TypeError("attempted to "+action+" private field on non-instance");return privateMap.get(receiver)}Object.defineProperty(_exports,"__esModule",{value:!0}),_exports.default=void 0,_factory=_interopRequireDefault(_factory),_modal_factory=_interopRequireDefault(_modal_factory),_modal_events=_interopRequireDefault(_modal_events),_ajax=_interopRequireDefault(_ajax);var _baseFactory=new WeakMap,_element=new WeakMap,_course=new WeakMap,_items=new WeakMap,_clipboardItem=new WeakMap,_canBackupUserdata=new WeakMap,_canAnonymizeUserdata=new WeakMap;return _exports.default=class{constructor(baseFactory,element,canBackupUserdata,canAnonymizeUserdata){_classPrivateFieldInitSpec(this,_baseFactory,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(this,_element,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(this,_course,{writable:!0,value:void 0}),_classPrivateFieldInitSpec(this,_items,{writable:!0,value:[]}),_classPrivateFieldInitSpec(this,_clipboardItem,{writable:!0,value:null}),_classPrivateFieldInitSpec(this,_canBackupUserdata,{writable:!0,value:!1}),_classPrivateFieldInitSpec(this,_canAnonymizeUserdata,{writable:!0,value:!1}),_classPrivateFieldSet(this,_baseFactory,baseFactory),_classPrivateFieldSet(this,_element,element),_classPrivateFieldSet(this,_canBackupUserdata,canBackupUserdata),_classPrivateFieldSet(this,_canAnonymizeUserdata,canAnonymizeUserdata)}addEventListeners(){this.setupCourse(),this.setupItems()}setupCourse(){const course=document.querySelector(".course-content"),courseElement=_classPrivateFieldGet(this,_baseFactory).block().course().element(this,course);courseElement.addBackupToSharingCartButtons(),_classPrivateFieldSet(this,_course,courseElement)}setupItems(){_classPrivateFieldGet(this,_element).querySelectorAll(".sharing_cart_item").forEach((element=>{this.setupItem(element)}))}setupItem(element){const itemElement=_classPrivateFieldGet(this,_baseFactory).block().item().element(this,element);_classPrivateFieldGet(this,_items).push(itemElement)}async setClipboard(item){_classPrivateFieldSet(this,_clipboardItem,item),await _classPrivateFieldGet(this,_course).setClipboard(item)}clearClipboard(){_classPrivateFieldSet(this,_clipboardItem,null)}deleteItem(item){_ajax.default.call([{methodname:"block_sharing_cart_delete_item_from_sharing_cart",args:{item_id:item.getItemId()},done:async deleted=>{if(deleted){const index=_classPrivateFieldGet(this,_items).findIndex((i=>i.getItemId()===item.getItemId()));_classPrivateFieldGet(this,_items).splice(index,1),item.remove()}else console.error("Failed to delete item")},fail:data=>{console.error(data)}}])}async createBackupItemToSharingCartModal(itemName,onSave){const strings=await(0,_str.get_strings)([{key:"backup_item",component:"block_sharing_cart"},{key:"into_sharing_cart",component:"block_sharing_cart"},{key:"backup",component:"core"},{key:"cancel",component:"core"}]),{html:html,js:js}=await _classPrivateFieldGet(this,_baseFactory).moodle().template().renderTemplate("block_sharing_cart/modal/backup_to_sharing_cart_modal_body",{show_user_data_backup:_classPrivateFieldGet(this,_canBackupUserdata),show_anonymize_user_data:_classPrivateFieldGet(this,_canBackupUserdata)&&_classPrivateFieldGet(this,_canAnonymizeUserdata)}),modal=await _modal_factory.default.create({type:_modal_factory.default.types.SAVE_CANCEL,title:strings[0]+': "'+itemName.slice(0,50).trim()+'" '+strings[1],body:html,buttons:{save:strings[2],cancel:strings[3]},removeOnClose:!0});return modal.getRoot().on(_modal_events.default.shown,(()=>_classPrivateFieldGet(this,_baseFactory).moodle().template().runTemplateJS(js))),modal.getRoot().on(_modal_events.default.save,(()=>{var _modalUserdataCheckbo,_modalAnonymizeCheckb;const modalUserdataCheckbox=document.getElementById("modal-userdata-checkbox"),modalAnonymizeCheckbox=document.getElementById("modal-anonymize-checkbox");onSave({users:null!==(_modalUserdataCheckbo=modalUserdataCheckbox.checked)&&void 0!==_modalUserdataCheckbo&&_modalUserdataCheckbo,anonymize:null!==(_modalAnonymizeCheckb=modalAnonymizeCheckbox.checked)&&void 0!==_modalAnonymizeCheckb&&_modalAnonymizeCheckb})})),modal}async addSectionBackupToSharingCart(sectionId){const sectionName=_classPrivateFieldGet(this,_course).getSectionName(sectionId),modal=await this.createBackupItemToSharingCartModal(sectionName,(settings=>{_ajax.default.call([{methodname:"block_sharing_cart_backup_section_into_sharing_cart",args:{section_id:sectionId,settings:settings},done:async data=>{await this.renderItem(data)},fail:data=>{console.error(data)}}])}));await modal.show()}async addCourseModuleBackupToSharingCart(courseModuleId){const courseModuleName=_classPrivateFieldGet(this,_course).getCourseModuleName(courseModuleId),modal=await this.createBackupItemToSharingCartModal(courseModuleName,(settings=>{_ajax.default.call([{methodname:"block_sharing_cart_backup_course_module_into_sharing_cart",args:{course_module_id:courseModuleId,settings:settings},done:async data=>{await this.renderItem(data)},fail:data=>{console.error(data)}}])}));await modal.show()}async renderItem(item){var _classPrivateFieldGet2;const existingItemIndex=_classPrivateFieldGet(this,_items).findIndex((i=>i.getItemId()===item.id)),existingItem=null!==(_classPrivateFieldGet2=_classPrivateFieldGet(this,_items)[existingItemIndex])&&void 0!==_classPrivateFieldGet2&&_classPrivateFieldGet2,oldElement=_classPrivateFieldGet(this,_element).querySelector('.sharing_cart_items .sharing_cart_item[data-itemid="'+item.id+'"]');if(existingItem&&oldElement){const element=await _classPrivateFieldGet(this,_baseFactory).moodle().template().createElementFromFragment("block_sharing_cart","item",1,{item_id:item.id});return _classPrivateFieldGet(this,_element).querySelector(".sharing_cart_items").replaceChild(element,oldElement),_classPrivateFieldGet(this,_items)[existingItemIndex]=_classPrivateFieldGet(this,_baseFactory).block().item().element(this,element),void element.querySelectorAll(".sharing_cart_item").forEach((subItem=>{this.setupItem(subItem)}))}const element=await _classPrivateFieldGet(this,_baseFactory).moodle().template().createElementFromTemplate("block_sharing_cart/block/item",{id:item.id,name:item.name,type:item.type,status:0,status_awaiting:!0,status_finished:!1,status_failed:!1,is_module:"section"!==item.type&&"course"!==item.type,is_course:"course"===item.type,is_section:"section"===item.type,is_root:!0});_classPrivateFieldGet(this,_element).querySelector(".sharing_cart_items").append(element),this.setupItem(element)}importItem(item,sectionId){console.log("Importing item (id: "+item.getItemId()+") from sharing cart to section (id: "+sectionId+")"),_classPrivateFieldGet(this,_course).clearClipboard()}async confirmImportBackupFromSharingCart(item,sectionId,e){e.preventDefault(),e.stopPropagation();const strings=await(0,_str.get_strings)([{key:"copy_item",component:"block_sharing_cart"},{key:"into_section",component:"block_sharing_cart"},{key:"confirm_copy_item",component:"block_sharing_cart"},{key:"import",component:"core"},{key:"cancel",component:"core"}]),sectionName=_classPrivateFieldGet(this,_course).getSectionName(sectionId),modal=await _modal_factory.default.create({type:_modal_factory.default.types.SAVE_CANCEL,title:strings[0]+': "'+item.getItemName().slice(0,50).trim()+'"'+strings[1]+': "'+sectionName.slice(0,50).trim()+'"',body:strings[2],buttons:{save:strings[3],cancel:strings[4]},removeOnClose:!0});modal.getRoot().on(_modal_events.default.save,this.importItem.bind(this,item,sectionId)),await modal.show()}},_exports.default}));

//# sourceMappingURL=element.min.js.map