{"version":3,"file":"element.min.js","sources":["../../../src/app/block/element.js"],"sourcesContent":["// eslint-disable-next-line no-unused-vars\nimport BaseFactory from '../factory';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport { get_strings } from \"core/str\";\nimport Ajax from \"core/ajax\";\nimport Templates from \"core/templates\";\n\nexport default class BlockElement {\n    /**\n     * @type {BaseFactory}\n     */\n    #baseFactory;\n\n    /**\n     * @type {HTMLElement}\n     */\n    #element;\n\n    /**\n     * @type {CourseElement}\n     */\n    #course;\n\n    /**\n     * @type {ItemElement[]}\n     */\n    #items = [];\n\n    /**\n     * @type {ItemElement|NULL}\n     */\n    #clipboardItem = null;\n    constructor(baseFactory, element) {\n        this.#baseFactory = baseFactory;\n        this.#element = element;\n    }\n\n    addEventListeners() {\n        this.setupCourse();\n        this.setupItems();\n    }\n    setupCourse() {\n        const course = document.querySelector('.course-content');\n\n        const courseElement = this.#baseFactory.blockFactory().course().element(this, course);\n        courseElement.addBackupToSharingCartButtons();\n\n        this.#course = courseElement;\n    }\n    setupItems() {\n        const items = this.#element.querySelectorAll('.sharing_cart_item');\n\n        items.forEach((element) => {\n            this.setupItem(element);\n        });\n    }\n\n    /**\n     * @param {HTMLElement} element\n     */\n    setupItem(element) {\n        const itemElement = this.#baseFactory.blockFactory().item().element(this, element);\n        itemElement.addEventListeners();\n\n        this.#items.push(\n            itemElement\n        );\n    }\n\n    /**\n     * @param {ItemElement} item\n     */\n    async setClipboard(item) {\n        this.#clipboardItem = item;\n\n        await this.#course.setClipboard(item);\n    }\n    clearClipboard() {\n        this.#clipboardItem = null;\n    }\n\n    /**\n     * @param {ItemElement} item\n     */\n    deleteItem(item) {\n        // TODO: Do web service call to delete item\n        console.log('Deleting item (id: '+item.getItemId()+') from sharing cart');\n\n        const index = this.#items.findIndex((i) => i.getItemId() === item.getItemId());\n        this.#items.splice(index, 1);\n        item.remove();\n    }\n\n    /**\n     * @param {Number} sectionId\n     */\n    addSectionBackupToSharingCart(sectionId) {\n        console.log('Adding section (id: '+sectionId+') backup to sharing cart');\n\n        Ajax.call([{\n            methodname: 'block_sharing_cart_backup_section_into_sharing_cart',\n            args: {\n                section_id: sectionId,\n            },\n            done: async (data) => {\n                await this.renderItem(data);\n            },\n            fail: (data) => {\n                console.log(data);\n            }\n        }]);\n    }\n\n    /**\n     * @param {Number} courseModuleId\n     */\n    addCourseModuleBackupToSharingCart(courseModuleId) {\n        console.log('Adding course module (id: '+courseModuleId+') backup to sharing cart');\n\n        Ajax.call([{\n            methodname: 'block_sharing_cart_backup_course_module_into_sharing_cart',\n            args: {\n                course_module_id: courseModuleId,\n            },\n            done: async (data) => {\n                await this.renderItem(data);\n            },\n            fail: (data) => {\n                console.log(data);\n            }\n        }]);\n    }\n\n    /**\n     * @param {Object} item\n     */\n    async renderItem(item) {\n        let element = document.createElement('div');\n        const {html, js} = await new Promise((resolve, reject) => {\n            Templates.render('block_sharing_cart/block/item', {\n                id: item.id,\n                name: item.name,\n                type: item.type,\n                status: 0,\n                is_module: item.type !== 'section' && item.type !== 'course',\n                is_course: item.type === 'course',\n                is_section: item.type === 'section',\n                is_root: true,\n            }).then(async (html, js) => {\n                resolve({\n                    html,\n                    js\n                });\n            }).fail(reject);\n        });\n        element = await Templates.replaceNode(\n            element,\n            html,\n            js\n        )[0];\n\n        this.#element.querySelector('.sharing_cart_items').append(element);\n\n        this.setupItem(element);\n    }\n\n    /**\n     * @param {ItemElement} item\n     * @param {Number} sectionId\n     */\n    importItem(item, sectionId) {\n        // TODO: Do web service call to delete item\n\n        console.log('Importing item (id: '+item.getItemId()+') from sharing cart to section (id: '+sectionId+')');\n        this.#course.clearClipboard();\n    }\n\n    /**\n     * @param {ItemElement} item\n     * @param {Number} sectionId\n     * @param {Event} e\n     */\n    async confirmImportBackupFromSharingCart(item, sectionId, e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const strings = await get_strings([\n            {\n                key: 'copy_item',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'into_section',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'confirm_copy_item',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'import',\n                component: 'core',\n            },\n            {\n                key: 'cancel',\n                component: 'core',\n            }\n        ]);\n\n        const sectionName = this.#course.getSectionName(sectionId);\n\n        const modal = await ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: strings[0] + ': \"' + item.getItemName() + '\" ' + strings[1] + ': \"' + sectionName + '\"',\n            body: strings[2],\n            buttons: {\n                save: strings[3],\n                cancel: strings[4],\n            },\n            removeOnClose: true,\n        });\n        modal.getRoot().on(ModalEvents.save, this.importItem.bind(this, item, sectionId));\n        await modal.show();\n    }\n}"],"names":["constructor","baseFactory","element","addEventListeners","setupCourse","setupItems","course","document","querySelector","courseElement","_classPrivateFieldGet","blockFactory","this","addBackupToSharingCartButtons","querySelectorAll","forEach","setupItem","itemElement","item","push","setClipboard","clearClipboard","deleteItem","console","log","getItemId","index","findIndex","i","splice","remove","addSectionBackupToSharingCart","sectionId","call","methodname","args","section_id","done","async","renderItem","data","fail","addCourseModuleBackupToSharingCart","courseModuleId","course_module_id","createElement","html","js","Promise","resolve","reject","render","id","name","type","status","is_module","is_course","is_section","is_root","then","Templates","replaceNode","append","importItem","e","preventDefault","stopPropagation","strings","key","component","sectionName","getSectionName","modal","ModalFactory","create","types","SAVE_CANCEL","title","getItemName","body","buttons","save","cancel","removeOnClose","getRoot","on","ModalEvents","bind","show"],"mappings":"kxDAiCIA,YAAYC,YAAaC,qRANhB,uEAKQ,+CAEOD,iDACJC,SAGpBC,yBACSC,mBACAC,aAETD,oBACUE,OAASC,SAASC,cAAc,mBAEhCC,cAAgBC,yCAAkBC,eAAeL,SAASJ,QAAQU,KAAMN,QAC9EG,cAAcI,mEAECJ,eAEnBJ,aACkBK,qCAAcI,iBAAiB,sBAEvCC,SAASb,eACNc,UAAUd,YAOvBc,UAAUd,eACAe,YAAcP,yCAAkBC,eAAeO,OAAOhB,QAAQU,KAAMV,SAC1Ee,YAAYd,uDAEAgB,KACRF,gCAOWC,gDACOA,YAEhBR,oCAAaU,aAAaF,MAEpCG,2DAC0B,MAM1BC,WAAWJ,MAEPK,QAAQC,IAAI,sBAAsBN,KAAKO,YAAY,6BAE7CC,MAAQhB,mCAAYiB,WAAWC,GAAMA,EAAEH,cAAgBP,KAAKO,iDACtDI,OAAOH,MAAO,GAC1BR,KAAKY,SAMTC,8BAA8BC,WAC1BT,QAAQC,IAAI,uBAAuBQ,UAAU,0CAExCC,KAAK,CAAC,CACPC,WAAY,sDACZC,KAAM,CACFC,WAAYJ,WAEhBK,KAAMC,MAAAA,aACI1B,KAAK2B,WAAWC,OAE1BC,KAAOD,OACHjB,QAAQC,IAAIgB,UAQxBE,mCAAmCC,gBAC/BpB,QAAQC,IAAI,6BAA6BmB,eAAe,0CAEnDV,KAAK,CAAC,CACPC,WAAY,4DACZC,KAAM,CACFS,iBAAkBD,gBAEtBN,KAAMC,MAAAA,aACI1B,KAAK2B,WAAWC,OAE1BC,KAAOD,OACHjB,QAAQC,IAAIgB,2BAQPtB,UACThB,QAAUK,SAASsC,cAAc,aAC/BC,KAACA,KAADC,GAAOA,UAAY,IAAIC,SAAQ,CAACC,QAASC,6BACjCC,OAAO,gCAAiC,CAC9CC,GAAIlC,KAAKkC,GACTC,KAAMnC,KAAKmC,KACXC,KAAMpC,KAAKoC,KACXC,OAAQ,EACRC,UAAyB,YAAdtC,KAAKoC,MAAoC,WAAdpC,KAAKoC,KAC3CG,UAAyB,WAAdvC,KAAKoC,KAChBI,WAA0B,YAAdxC,KAAKoC,KACjBK,SAAS,IACVC,MAAKtB,MAAOQ,KAAMC,MACjBE,QAAQ,CACJH,KAAAA,KACAC,GAAAA,QAELN,KAAKS,WAEZhD,cAAgB2D,mBAAUC,YACtB5D,QACA4C,KACAC,IACF,wCAEYvC,cAAc,uBAAuBuD,OAAO7D,cAErDc,UAAUd,SAOnB8D,WAAW9C,KAAMc,WAGbT,QAAQC,IAAI,uBAAuBN,KAAKO,YAAY,uCAAuCO,UAAU,yCACxFX,0DAQwBH,KAAMc,UAAWiC,GACtDA,EAAEC,iBACFD,EAAEE,wBAEIC,cAAgB,oBAAY,CAC9B,CACIC,IAAK,YACLC,UAAW,sBAEf,CACID,IAAK,eACLC,UAAW,sBAEf,CACID,IAAK,oBACLC,UAAW,sBAEf,CACID,IAAK,SACLC,UAAW,QAEf,CACID,IAAK,SACLC,UAAW,UAIbC,YAAc7D,oCAAa8D,eAAexC,WAE1CyC,YAAcC,uBAAaC,OAAO,CACpCrB,KAAMoB,uBAAaE,MAAMC,YACzBC,MAAOV,QAAQ,GAAK,MAAQlD,KAAK6D,cAAgB,KAAOX,QAAQ,GAAK,MAAQG,YAAc,IAC3FS,KAAMZ,QAAQ,GACda,QAAS,CACLC,KAAMd,QAAQ,GACde,OAAQf,QAAQ,IAEpBgB,eAAe,IAEnBX,MAAMY,UAAUC,GAAGC,sBAAYL,KAAMtE,KAAKoD,WAAWwB,KAAK5E,KAAMM,KAAMc,kBAChEyC,MAAMgB"}