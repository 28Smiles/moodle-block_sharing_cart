{"version":3,"file":"element.min.js","sources":["../../../src/app/block/element.js"],"sourcesContent":["// eslint-disable-next-line no-unused-vars\nimport BaseFactory from '../factory';\nimport ModalFactory from 'core/modal_factory';\nimport ModalEvents from 'core/modal_events';\nimport { get_strings } from \"core/str\";\n\nexport default class BlockElement {\n    /**\n     * @type {BaseFactory}\n     */\n    #baseFactory;\n\n    /**\n     * @type {HTMLElement}\n     */\n    #element;\n\n    /**\n     * @type {CourseElement}\n     */\n    #course;\n\n    /**\n     * @type {ItemElement[]}\n     */\n    #items = [];\n\n    /**\n     * @type {ItemElement|NULL}\n     */\n    #clipboardItem = null;\n    constructor(baseFactory, element) {\n        this.#baseFactory = baseFactory;\n        this.#element = element;\n    }\n\n    addEventListeners() {\n        this.setupCourse();\n        this.setupItems();\n    }\n    setupCourse() {\n        const course = document.querySelector('.course-content');\n\n        const courseElement = this.#baseFactory.blockFactory().course().element(this, course);\n        courseElement.addBackupToSharingCartButtons();\n\n        this.#course = courseElement;\n    }\n    setupItems() {\n        const items = this.#element.querySelectorAll('.sharing_cart_item');\n\n        items.forEach((element) => {\n            const itemElement = this.#baseFactory.blockFactory().item().element(this, element);\n            itemElement.addEventListeners();\n\n            this.#items.push(\n                itemElement\n            );\n        });\n    }\n\n    /**\n     * @param {ItemElement} item\n     */\n    async setClipboard(item) {\n        this.#clipboardItem = item;\n\n        await this.#course.setClipboard(item);\n    }\n    clearClipboard() {\n        this.#clipboardItem = null;\n    }\n\n    /**\n     * @param {ItemElement} item\n     */\n    deleteItem(item) {\n        // TODO: Do web service call to delete item\n        console.log('Deleting item (id: '+item.getItemId()+') from sharing cart');\n\n        const index = this.#items.findIndex((i) => i.getItemId() === item.getItemId());\n        this.#items.splice(index, 1);\n        item.remove();\n    }\n\n    /**\n     * @param {Number} sectionId\n     */\n    addSectionBackupToSharingCart(sectionId) {\n        // TODO: Do web service call to backup item\n        console.log('Adding section (id: '+sectionId+') backup to sharing cart');\n    }\n\n    /**\n     * @param {Number} courseModuleId\n     */\n    addCourseModuleBackupToSharingCart(courseModuleId) {\n        // TODO: Do web service call to backup item\n        console.log('Adding course module (id: '+courseModuleId+') backup to sharing cart');\n    }\n\n    /**\n     * @param {ItemElement} item\n     * @param {Number} sectionId\n     */\n    importItem(item, sectionId) {\n        // TODO: Do web service call to delete item\n\n        console.log('Importing item (id: '+item.getItemId()+') from sharing cart to section (id: '+sectionId+')');\n        this.#course.clearClipboard();\n    }\n\n    /**\n     * @param {ItemElement} item\n     * @param {Number} sectionId\n     * @param {Event} e\n     */\n    async confirmImportBackupFromSharingCart(item, sectionId, e) {\n        e.preventDefault();\n        e.stopPropagation();\n\n        const strings = await get_strings([\n            {\n                key: 'copy_item',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'into_section',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'confirm_copy_item',\n                component: 'block_sharing_cart',\n            },\n            {\n                key: 'import',\n                component: 'core',\n            },\n            {\n                key: 'cancel',\n                component: 'core',\n            }\n        ]);\n\n        const sectionName = this.#course.getSectionName(sectionId);\n\n        const modal = await ModalFactory.create({\n            type: ModalFactory.types.SAVE_CANCEL,\n            title: strings[0] + ': \"' + item.getItemName() + '\" ' + strings[1] + ': \"' + sectionName + '\"',\n            body: strings[2],\n            buttons: {\n                save: strings[3],\n                cancel: strings[4],\n            },\n            removeOnClose: true,\n        });\n        modal.getRoot().on(ModalEvents.save, this.importItem.bind(this, item, sectionId));\n        await modal.show();\n    }\n}"],"names":["constructor","baseFactory","element","addEventListeners","setupCourse","setupItems","course","document","querySelector","courseElement","_classPrivateFieldGet","blockFactory","this","addBackupToSharingCartButtons","querySelectorAll","forEach","itemElement","item","push","setClipboard","clearClipboard","deleteItem","console","log","getItemId","index","findIndex","i","splice","remove","addSectionBackupToSharingCart","sectionId","addCourseModuleBackupToSharingCart","courseModuleId","importItem","e","preventDefault","stopPropagation","strings","key","component","sectionName","getSectionName","modal","ModalFactory","create","type","types","SAVE_CANCEL","title","getItemName","body","buttons","save","cancel","removeOnClose","getRoot","on","ModalEvents","bind","show"],"mappings":"kpDA+BIA,YAAYC,YAAaC,qRANhB,uEAKQ,+CAEOD,iDACJC,SAGpBC,yBACSC,mBACAC,aAETD,oBACUE,OAASC,SAASC,cAAc,mBAEhCC,cAAgBC,yCAAkBC,eAAeL,SAASJ,QAAQU,KAAMN,QAC9EG,cAAcI,mEAECJ,eAEnBJ,aACkBK,qCAAcI,iBAAiB,sBAEvCC,SAASb,gBACLc,YAAcN,yCAAkBC,eAAeM,OAAOf,QAAQU,KAAMV,SAC1Ec,YAAYb,uDAEAe,KACRF,mCAQOC,gDACOA,YAEhBP,oCAAaS,aAAaF,MAEpCG,2DAC0B,MAM1BC,WAAWJ,MAEPK,QAAQC,IAAI,sBAAsBN,KAAKO,YAAY,6BAE7CC,MAAQf,mCAAYgB,WAAWC,GAAMA,EAAEH,cAAgBP,KAAKO,iDACtDI,OAAOH,MAAO,GAC1BR,KAAKY,SAMTC,8BAA8BC,WAE1BT,QAAQC,IAAI,uBAAuBQ,UAAU,4BAMjDC,mCAAmCC,gBAE/BX,QAAQC,IAAI,6BAA6BU,eAAe,4BAO5DC,WAAWjB,KAAMc,WAGbT,QAAQC,IAAI,uBAAuBN,KAAKO,YAAY,uCAAuCO,UAAU,yCACxFX,0DAQwBH,KAAMc,UAAWI,GACtDA,EAAEC,iBACFD,EAAEE,wBAEIC,cAAgB,oBAAY,CAC9B,CACIC,IAAK,YACLC,UAAW,sBAEf,CACID,IAAK,eACLC,UAAW,sBAEf,CACID,IAAK,oBACLC,UAAW,sBAEf,CACID,IAAK,SACLC,UAAW,QAEf,CACID,IAAK,SACLC,UAAW,UAIbC,YAAc/B,oCAAagC,eAAeX,WAE1CY,YAAcC,uBAAaC,OAAO,CACpCC,KAAMF,uBAAaG,MAAMC,YACzBC,MAAOX,QAAQ,GAAK,MAAQrB,KAAKiC,cAAgB,KAAOZ,QAAQ,GAAK,MAAQG,YAAc,IAC3FU,KAAMb,QAAQ,GACdc,QAAS,CACLC,KAAMf,QAAQ,GACdgB,OAAQhB,QAAQ,IAEpBiB,eAAe,IAEnBZ,MAAMa,UAAUC,GAAGC,sBAAYL,KAAMzC,KAAKsB,WAAWyB,KAAK/C,KAAMK,KAAMc,kBAChEY,MAAMiB"}